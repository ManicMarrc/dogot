name: 🐧 Linux Builds
on:
  workflow_call:

# Global Settings
env:
  # Used for the cache key, and godot-cpp checkout. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: master
  SCONSFLAGS: verbose=yes warnings=extra module_text_server_fb_enabled=yes
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }} (target=${{ matrix.target }}, arch=${{ matrix.arch }})
    strategy:
      fail-fast: false
      matrix:
        target: [template_debug, template_release]
        arch: [x86_32, x86_64]
        include:
          - name: Editor
            cache-name: linux-editor
            target: editor
            arch: x86_64

          - name: Template
            cache-name: linux-template
            sconsflags: debug_symbols=no

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: (Linux) Install buildroot x86_64
        if: ${{ matrix.arch == 'x86_64' }}
        shell: sh
        run: |
          sudo apt-get update
          sudo apt-get install yasm
          cd /opt
          wget https://download.tuxfamily.org/godotengine/toolchains/linux/x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          tar xf x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          rm -f x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          mv x86_64-godot-linux-gnu_sdk-buildroot buildroot
          cd buildroot
          ./relocate-sdk.sh
          echo "/opt/buildroot/bin" >> $GITHUB_PATH
      
      - name: (Linux) Install buildroot x86_32
        if: ${{ matrix.arch == 'x86_32' }}
        shell: sh
        run: |
          sudo apt-get update
          sudo apt-get install yasm
          cd /opt
          wget https://download.tuxfamily.org/godotengine/toolchains/linux/i686-godot-linux-gnu_sdk-buildroot.tar.bz2
          tar xf i686-godot-linux-gnu_sdk-buildroot.tar.bz2
          rm -f i686-godot-linux-gnu_sdk-buildroot.tar.bz2
          mv i686-godot-linux-gnu_sdk-buildroot buildroot
          cd buildroot
          ./relocate-sdk.sh
          echo "/opt/buildroot/bin" >> $GITHUB_PATH

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}-${{ matrix.target }}-${{ matrix.arch }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

<<<<<<< HEAD
=======
      - name: Set up .NET Sdk
        uses: actions/setup-dotnet@v3
        if: ${{ matrix.build-mono }}
        with:
          dotnet-version: '6.0.x'

>>>>>>> 8449592d92eaeef990f5502b419d491ee3eeb7a6
      - name: Setup GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} arch=${{ matrix.arch }}
          platform: linuxbsd
          target: ${{ matrix.target }}
          tests: false

      - name: Prepare artifact
        run: |
          strip bin/godot.*
          chmod +x bin/godot.*

      - name: Prepare templates
        if: endsWith(matrix.cache-name, 'template')
        run: |
          mkdir -p templates

          mv bin/godot.linuxbsd.template_release.x86_64 templates/linux_release.x86_64 || true
          mv bin/godot.linuxbsd.template_debug.x86_64 templates/linux_debug.x86_64 || true
          mv bin/godot.linuxbsd.template_release.x86_32 templates/linux_release.x86_32 || true
          mv bin/godot.linuxbsd.template_debug.x86_32 templates/linux_debug.x86_32 || true

          rm -rf bin/*
          mv templates bin

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-${{ matrix.target }}-${{ matrix.arch }}
          path: bin/*
